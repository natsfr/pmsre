name: pmsre
bound: 32
align: 32

%pos: 32
  longname: Motor position
  address: 0x00
  direction: rw
  count: 8
  doc: This register holds the motor position value.

  %%frac: 0-21
    doc: Fractionnal part of the motor position.

  %%step: 22-22
    doc: Position bit used to drive the motor step signal.

  %%int: 23-31
    doc: Integral part of the motor position, not used to drive the motor.

%inc: 32
  longname: Motor increment
  address: 0x20
  direction: rw
  count: 8
  doc: This defines the value which will be added to the motor posision during each cycle of the command.
  doc: The value is actually pushed into the command fifo when the len register is written.

  %%frac: 0-22
    doc: Increment value in Q1.22 format, should not be greater than 1.0 (0x800000).
    doc: This defines the motor speed during the command.

  %%sign: 23-23
    doc: Increment sign bit, defines the motor direction during the next command.

%len: 32
  longname: Command schedule
  address: 0x40
  direction: w
  doc: Writting to this register schedule a command with the specified duration and user id.
  doc: The increment values of all motors along with the duration and the user id are pushed into the scheduled commands fifo.
  doc: The command will execute as soon as all previous commands get completed. Up to 4 commands can be queued in the fifo.

  %%cycles: 0-23
    doc: Command duration in number of cycles.

  %%id: 24-27
    doc: This user defined command id will later be reported in the completed commands fifo.

%cur: 32
  longname: Current command
  address: 0x60
  direction: r
  doc: This reports the state, user id and remaining cycles of the running command.

  %%cycles: 0-23
    doc: Remaining cycles.

  %%id: 24-27
    doc: User defined command id.

  %%state: 29-28
    doc: Motor driving status.
    0b00: idle
    0b01: running
    0b10: done

%done: 32
  longname: Completed command
  address: 0x80
  direction: r
  doc: This pops a command status from the fifo of completed commands.
  doc: Up to 4 status can be queued in the fifo.

  %%rem: 0-23
    doc: Number of remaining cycles when the command ended.
    doc: This is zero when the command completed successfully.

  %%id: 24-27
    doc: The user defined id of the completed command.

  %%valid: 28-28
    doc: This indicates that the fifo was not empty (the rem and id fields are valid).

%stat: 32
  longname: Status
  address: 0xa0
  direction: r
  doc: This reports various device status information
  doc: A motor fault on an enabled motor will make any command terminate early.

  %%fault: 0-0
    doc: Motor fault condition reported by the motor driver.
    count: 8

  %%istop: 8-8
    doc: End-stop condition detected, preventing motor position increase if watched.
    count: 8

  %%dstop: 16-16
    doc: End-stop condition detected, preventing motor position decrease if watched.
    count: 8

  %%dempty: 24-24
    doc: Completed commands fifo is empty.

  %%sempty: 25-25
    doc: Scheduled commands fifo is empty.

  %%mcount: 31-29
    doc: Number of implemented motors minus one.

%ctrl: 32
  longname: Control
  address: 0xc0
  direction: rw
  doc: Enable motor drivers and end-stop inputs watching.
  doc: Each motor has 2 associated end-stop, one for each direction.
  doc: Watched end-stops will make commands moving the motor in the wrong direction terminate early.

  %%enable: 0-0
    doc: Enable motor driver.
    count: 8

  %%istop: 8-8
    doc: Enable watching end-stop input in increase direction.
    count: 8

  %%dstop: 16-16
    doc: Enable watching end-stop input in decrease direction.
    count: 8

  %%firq: 24-24
    doc: Raise irq output on enabled motor fault.

  %%cirq: 25-25
    doc: Raise irq output on completed fifo not empty.

